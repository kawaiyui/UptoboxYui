<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="HelpTextDebug" xml:space="preserve">
    <value>打印调试数据。</value>
  </data>
  <data name="HelpTextLinks" xml:space="preserve">
    <value>Uptobox下载链接</value>
  </data>
  <data name="HelpTextOutput" xml:space="preserve">
    <value>输出目录(如果不设置，默认为当前工作目录)</value>
  </data>
  <data name="HelpTextToken" xml:space="preserve">
    <value>Uptobox用户令牌。请访问 https://docs.uptobox.com/?javascript#how-to-find-my-api-token</value>
  </data>
  <data name="HelpTextVerbose" xml:space="preserve">
    <value>将输出设置为详细消息。</value>
  </data>
  <data name="SentenceBadFormatConversionErrorOption" xml:space="preserve">
    <value>'{0}'选项以错误的格式定义。</value>
  </data>
  <data name="SentenceBadFormatConversionErrorValue" xml:space="preserve">
    <value>未绑定到选项名称的值定义为错误的格式。</value>
  </data>
  <data name="SentenceBadFormatTokenError" xml:space="preserve">
    <value>无法识别令牌 {0} </value>
  </data>
  <data name="SentenceBadVerbSelectedError" xml:space="preserve">
    <value>没有识别出 {0}</value>
  </data>
  <data name="SentenceErrorsHeadingText" xml:space="preserve">
    <value>错误:</value>
  </data>
  <data name="SentenceHelpCommandTextOption" xml:space="preserve">
    <value>显示此帮助屏幕。</value>
  </data>
  <data name="SentenceHelpCommandTextVerb" xml:space="preserve">
    <value>显示指定命令的详细信息。</value>
  </data>
  <data name="SentenceMissingRequiredOptionError" xml:space="preserve">
    <value>需要添加 {0} 参数运行。</value>
  </data>
  <data name="SentenceMissingRequiredValueError" xml:space="preserve">
    <value>缺少未绑定到选项名称的必需值。</value>
  </data>
  <data name="SentenceMissingValueOptionError" xml:space="preserve">
    <value>选项 {0} 没有值</value>
  </data>
  <data name="SentenceMutuallyExclusiveSetErrors" xml:space="preserve">
    <value>选项：{0} 与 {1} 不兼容。</value>
  </data>
  <data name="SentenceNoVerbSelectedError" xml:space="preserve">
    <value>没有选择。</value>
  </data>
  <data name="SentenceOptionGroupWord" xml:space="preserve">
    <value>无</value>
  </data>
  <data name="SentenceRepeatedOptionError" xml:space="preserve">
    <value>选项'{0}'被定义多次。</value>
  </data>
  <data name="SentenceRequiredWord" xml:space="preserve">
    <value>必须的。</value>
  </data>
  <data name="SentenceSequenceOutOfRangeErrorOption" xml:space="preserve">
    <value>序列选项 {0} 定义的条目少于或多于所需的条目。</value>
  </data>
  <data name="SentenceSequenceOutOfRangeErrorValue" xml:space="preserve">
    <value>不绑定到选项名的序列值定义时，条目比所需条目少。</value>
  </data>
  <data name="SentenceSetValueExceptionError" xml:space="preserve">
    <value>错误地将值设置为选项 {0} : {1}</value>
  </data>
  <data name="SentenceUnknownOptionError" xml:space="preserve">
    <value>选项 {0} 未知。</value>
  </data>
  <data name="SentenceUsageHeadingText" xml:space="preserve">
    <value>使用:</value>
  </data>
  <data name="SentenceVersionCommandText" xml:space="preserve">
    <value>显示版本信息。</value>
  </data>
</root>